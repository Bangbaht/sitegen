#!/usr/bin/env node

import createLogger           from 'debug';

createLogger.enable('sitegen:compiler:*,sitegen:server');

import open                   from 'open';
import express                from 'express';
import Webpack                from 'webpack';
import WebpackDevMiddleware   from 'webpack-dev-middleware';
import WebpackHotMiddleware   from 'webpack-hot-middleware';
import React                  from 'react';
import {renderToStaticMarkup} from 'react-dom/server';
import Site                   from '../Site';
import {JS_BUNDLE_NAME}       from '../webpack/configure';
import {parse, configure}     from '../util/CLI';

let log = createLogger('sitegen:server');

let {site, options} = parse(process.argv, parser => {
  parser = parser.option('--open', 'open browser automatically');
  return parser;
});

let config = configure(site, {
  lib: options.lib,
  output: options.output,
  mode: 'serve',
  require: options.require,
  dev: true,
  compilerName: 'main'
});

let compiler = Webpack(config);
let devMiddleware = WebpackDevMiddleware(compiler, {quiet: true});
let hotMiddleware = WebpackHotMiddleware(compiler, {log: false});

let app = express();

app.use(devMiddleware);
app.use(hotMiddleware);
app.use(render);
app.listen(3000, function() {
  log('started listening on port %d', 3000);
});

if (options.open) {
  open('http://localhost:3000');
}

function render(req, res, next) {
  let markup = renderToStaticMarkup(<Site jsBundlePath={'/' + JS_BUNDLE_NAME} />);
  res.send(markup);
}
